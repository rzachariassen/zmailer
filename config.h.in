/* config.h.in manually edited from autoheader result */

/* Define if on AIX 3.
   System headers sometimes define this.
   We just want to avoid a redefinition error message.  */
#ifndef _ALL_SOURCE
#undef _ALL_SOURCE
#endif

/* Define if using alloca.c.  */
#undef C_ALLOCA

/* Define if the closedir function returns void instead of int.  */
#undef CLOSEDIR_VOID

/* Define to empty if the keyword does not work.  */
#undef const

/* Define to one of _getb67, GETB67, getb67 for Cray-2 and Cray-YMP systems.
   This function is required for alloca.c support on those systems.  */
#undef CRAY_STACKSEG_END

/* Define to the type of elements in the array set by `getgroups'.
   Usually this is either `int' or `gid_t'.  */
#undef GETGROUPS_T

/* Define to `int' if <sys/types.h> doesn't define.  */
#undef gid_t

/* Define if you have alloca, as a function or macro.  */
#undef HAVE_ALLOCA

/* Define if you have <alloca.h> and it should be used (not on Ultrix).  */
#undef HAVE_ALLOCA_H

/* Define if you don't have vprintf but do have _doprnt.  */
#undef HAVE_DOPRNT

/* Define if your struct stat has st_blocks.  */
#undef HAVE_ST_BLOCKS
/* And define this, if your struct stat has   st_blksize  */
#undef HAVE_ST_BLKSIZE

/* Define if utime(file, NULL) sets file's timestamp to the present.  */
#undef HAVE_UTIME_NULL

/* Define if you have the vprintf function.  */
#undef HAVE_VPRINTF
#undef HAVE_VSPRINTF
#undef HAVE_VSNPRINTF
#undef HAVE_SNPRINTF

/* Define if major, minor, and makedev are declared in <mkdev.h>.  */
#undef MAJOR_IN_MKDEV

/* Define if major, minor, and makedev are declared in <sysmacros.h>.  */
#undef MAJOR_IN_SYSMACROS

/* Define if on MINIX.  */
#undef _MINIX

/* Define to `int' if <sys/types.h> doesn't define.  */
#undef mode_t

/* Define to `long' if <sys/types.h> doesn't define.  */
#undef off_t

/* Define if the system does not provide POSIX.1 features except
   with this defined.  */
#undef _POSIX_1_SOURCE

/* Define if you need to in order for stat and other things to work.  */
#undef _POSIX_SOURCE

/* Define as the return type of signal handlers (int or void).  */
#undef RETSIGTYPE

/* Define to `unsigned' if <sys/types.h> doesn't define.  */
#undef size_t

/* If using the C implementation of alloca, define if you know the
   direction of stack growth for your system; otherwise it will be
   automatically deduced at run-time.
	STACK_DIRECTION > 0 => grows toward higher addresses
	STACK_DIRECTION < 0 => grows toward lower addresses
	STACK_DIRECTION = 0 => direction of growth unknown
 */
#undef STACK_DIRECTION

/* Define if the `S_IS*' macros in <sys/stat.h> do not work properly.  */
#undef STAT_MACROS_BROKEN

/* Define if you have the ANSI C header files.  */
#undef STDC_HEADERS

/* Define if you can safely include both <sys/time.h> and <time.h>.  */
#undef TIME_WITH_SYS_TIME

/* Define if your <sys/time.h> declares struct tm.  */
#undef TM_IN_SYS_TIME

/* Timezone information storage */
/* If 'struct tm' has a 'tm_zone' member */
#undef HAVE_TM_ZONE
/* Alternatively if the  'extern char *zname[];' is found: */
#undef HAVE_TZNAME
/* Perhaps 'struct tm' has 'tm_gmtoff' member ? */
#undef HAVE_TM_GMTOFF
/* or perhaps there is global variable 'altzone' ? (and friends) */
#undef HAVE_ALTZONE
/* or maybe we have POSIX (?) style with only one variable: */
#undef HAVE_TIMEZONE

/* Define to `int' if <sys/types.h> doesn't define.  */
#undef uid_t

/* Define if you have the Andrew File System.  */
#undef AFS

/* Define to `unsigned long' if <sys/types.h> doesn't define.  */
#undef ino_t

/* Define if there is a member named d_ino in the struct describing
   directory headers.  */
#undef D_INO_IN_DIRENT

/* Define if you have the getmntent function.  */
#undef HAVE_GETMNTENT

/* Define if there is no specific function for reading the list of
   mounted filesystems.  fread will be used to read /etc/mnttab.  [SVR2]  */
#undef MOUNTED_FREAD

/* Define if (like SVR2) there is no specific function for reading the
   list of mounted filesystems, and your system has these header files:
   <sys/fstyp.h> and <sys/statfs.h>.  [SVR3]  */
#undef MOUNTED_FREAD_FSTYP

/* Define if there is a function named getfsstat for reading the list
   of mounted filesystems.  [DEC Alpha running OSF/1]  */
#undef MOUNTED_GETFSSTAT

/* Define if there is a function named getmnt for reading the list of
   mounted filesystems.  [Ultrix]  */
#undef MOUNTED_GETMNT

/* Define if there is a function named getmntent for reading the list
   of mounted filesystems, and that function takes a single argument.
   [4.3BSD, SunOS, HP-UX, Dynix, Irix]  */
#undef MOUNTED_GETMNTENT1

/* Define if there is a function named getmntent for reading the list of
   mounted filesystems, and that function takes two arguments.  [SVR4]  */
#undef MOUNTED_GETMNTENT2

/* Define if there is a function named getmntinfo for reading the list
   of mounted filesystems.  [4.4BSD]  */
#undef MOUNTED_GETMNTINFO

/* Define if there is a function named mntctl that can be used to read
   the list of mounted filesystems, and there is a system header file
   that declares `struct vmount.'  [AIX]  */
#undef MOUNTED_VMOUNT

/*  Define if  statfs takes 3 args.  [DEC Alpha running OSF/1]  */
#undef STAT_STATFS3_OSF1

/* Define if there is no specific function for reading filesystems usage
   information and you have the <sys/filsys.h> header file.  [SVR2]  */
#undef STAT_READ_FILSYS

/* Define if statfs takes 2 args and struct statfs has a field named f_bsize.
   [4.3BSD, SunOS 4, HP-UX, AIX PS/2]  */
#undef STAT_STATFS2_BSIZE

/* Define if statfs takes 2 args and struct statfs has a field named f_fsize.
   [4.4BSD, NetBSD]  */
#undef STAT_STATFS2_FSIZE

/* Define if statfs takes 2 args and the second argument has
   type struct fs_data.  [Ultrix]  */
#undef STAT_STATFS2_FS_DATA

/* Define if statfs takes 4 args.  [SVR3, Dynix, Irix, Dolphin]  */
#undef STAT_STATFS4

/* Define if there is a function named statvfs.  [SVR4]  */
#undef STAT_STATVFS

/* Define if you have the bcopy function.  */
#undef HAVE_BCOPY

/* Define if you have the endgrent function.  */
#undef HAVE_ENDGRENT

/* Define if you have the fchdir function.  */
#undef HAVE_FCHDIR

/* Define if you have the ftime function.  */
#undef HAVE_FTIME

/* Define if you have the ftruncate function.  */
#undef HAVE_FTRUNCATE

/* Define if you have the getcwd function.  */
#undef HAVE_GETCWD

/* Define if you have the getgroups/setgroups functions.  */
#undef HAVE_GETGROUPS
#undef HAVE_SETGROUPS

/* Define if you have the getmntinfo function.  */
#undef HAVE_GETMNTINFO

/* Define if you have the gettimeofday function.  */
#undef HAVE_GETTIMEOFDAY

/* Define if you have the isascii function.  */
#undef HAVE_ISASCII

/* Define if you have the memcpy function.  */
#undef HAVE_MEMCPY

/* Define if you have the mkfifo function.  */
#undef HAVE_MKFIFO

/* Define if you have the statvfs function.  */
#undef HAVE_STATVFS

/* Define if you have the strerror function.  */
#undef HAVE_STRERROR

/* Define if you have the strsignal function -- check also for sys_siglist[] */
#undef HAVE_STRSIGNAL
#undef HAVE_SYS_SIGLIST
#undef SYS_SIGLIST_DECLARED

/* Define if you have the <dirent.h> header file.  */
#undef HAVE_DIRENT_H

/* Define if you have the <errno.h> header file.  */
#undef HAVE_ERRNO_H

/* Define if you have the <fcntl.h> header file.  */
#undef HAVE_FCNTL_H

/* Define if you have the <limits.h> header file.  */
#undef HAVE_LIMITS_H

/* Define if you have the <mntent.h> header file.  */
#undef HAVE_MNTENT_H

/* Define if you have the <mnttab.h> header file.  */
#undef HAVE_MNTTAB_H

/* Define if you have the <ndir.h> header file.  */
#undef HAVE_NDIR_H

/* Define if you have the <string.h> header file.  */
#undef HAVE_STRING_H

/* Define if you have the <sys/dir.h> header file.  */
#undef HAVE_SYS_DIR_H

/* Define if you have the <sys/filsys.h> header file.  */
#undef HAVE_SYS_FILSYS_H

/* Define if you have the <sys/fs_types.h> header file.  */
#undef HAVE_SYS_FS_TYPES_H

/* Define if you have the <sys/fstyp.h> header file.  */
#undef HAVE_SYS_FSTYP_H

/* Define if you have the <sys/mount.h> header file.  */
#undef HAVE_SYS_MOUNT_H

/* Define if you have the <sys/ndir.h> header file.  */
#undef HAVE_SYS_NDIR_H

/* Define if you have the <sys/param.h> header file.  */
#undef HAVE_SYS_PARAM_H

/* Define if you have the <sys/statfs.h> header file.  */
#undef HAVE_SYS_STATFS_H

/* Define if you have the <sys/statvfs.h> header file.  */
#undef HAVE_SYS_STATVFS_H

/* Define if you have the <sys/time.h> header file.  */
#undef HAVE_SYS_TIME_H

/* Define if you have the <sys/vfs.h> header file.  */
#undef HAVE_SYS_VFS_H

/* Define if you have the <unistd.h> header file.  */
#undef HAVE_UNISTD_H

/* Define if you have the <stdlib.h> header file.  */
#undef HAVE_STDLIB_H

/* Define if you have the <utime.h> header file.  */
#undef HAVE_UTIME_H

/* Define if you have the bsd library (-lbsd).  */
#undef HAVE_LIBBSD

/* Define if you have the ldgc library (-lldgc).  */
#undef HAVE_LIBLDGC

/* Define if you have the ypsec library (-lypsec).  */
#undef HAVE_LIBYPSEC

/* Define if you have working mmap() */
#undef HAVE_MMAP
#undef TA_USE_MMAP

/* Define, if the  getpgrp()  is according to POSIX.1 interface */
#undef GETPGRP_VOID
#undef HAVE_GETPGRP

/* Has  setsid() ? */
#undef HAVE_SETSID

/* How do I change my identity ? */
#undef HAVE_SETREUID
#undef HAVE_SETEUID
#undef HAVE_SETUID	/* not used */
#undef HAVE_SETRUID	/* not used */

/* Which of the various DBMs we have ?
	gdbm	-- GNU DBM
	ndbm	-- older BSD new-dbm (and BSD DB compability mode)
	db	-- BSD4.4 DBM
	dbm	-- ancient DBM with only ONE database at the system!
   Can intermix gdbm, and ndbm, or gdbm and db.  */
#undef HAVE_GDBM_H
#undef HAVE_NDBM_H
#undef HAVE_DBM_ERROR
#undef HAVE_DB_H
#undef HAVE_DBM_H
#undef HAVE_LDAP

/* Various stdio library things */
#undef HAVE_SETVBUF
#undef HAVE_INDEX
#undef HAVE_RINDEX

/* Various wait() things */
#undef HAVE_WAITPID
#undef HAVE_SYS_WAIT_H
#undef HAVE_WAIT3
#undef HAVE_WAIT4

/* Compiler/hardware things */
#undef WORDS_BIGENDIAN
#undef inline
#undef SIZEOF_VOID_P
#undef SIZEOF_SHORT
#undef SIZEOF_INT
#undef SIZEOF_LONG
#undef SIZEOF_DOUBLE

/* Networking stuff */
#undef HAVE_NETDB_H
#undef HAVE_SYS_SOCKET_H
#undef HAVE_SOCKET
#undef HAVE_SA_LEN
#undef HAVE_SELECT
#undef HAVE_SELECT_H
#undef HAVE_SYS_SELECT_H
#undef HAVE_SOCKETPAIR
#undef HAVE_GETHOSTBYNAME
#undef HAVE_GETHOSTENT
#undef HAVE_SETHOSTENT
#undef HAVE_ENDHOSTENT
#undef HAVE_RESOLVER
#undef HAVE_SYSLOG
#undef HAVE_SYSLOG_H
#undef HAVE_PROTOCOLS_RWHOD_H

/* TCP-Wrappers: */
#undef HAVE_TCPD_H

/* Mailbox things */
#undef HAVE_FSYNC
#undef HAVE_MAILLOCK_H
#undef HAVE_DOTLOCK
#undef HAVE_FLOCK
#undef HAVE_LOCKF
#undef HAVE_FCHOWN
#undef HAVE_UTIMES
#undef HAVE_UTIME
#undef HAVE_UTIME_H

/* Other commonly needed stuff.. */
#undef HAVE_RENAME
#undef HAVE_SETRLIMIT
#undef HAVE_GETDTABLESIZE
#undef HAVE_DUP2
#undef HAVE_SYSCONF
#undef HAVE_FPATHCONF
#undef HAVE_WRITEV

/* IPv6 related tests.  We use the protocol-independent
   getaddrinfo()/getnameinfo() for the actual work in
   all systems.  Though in systems without IPv6 those
   routines don't support AF_INET6 ... */
#undef INET6
#undef HAVE_NETINET_IN_H
/* Sigh....  Linux 2.1.x series with IPv6  */
#undef HAVE_NETINET_IN6_H
#undef HAVE_NETINET6_IN6_H
#undef HAVE_LINUX_IN6_H

/* <varargs.h> or <stdarg.h> ?  Pre or post ANSI-C ? */
#undef HAVE_VARARGS_H
#undef HAVE_STDARG_H

/* If the  sprintf() returns a char pointer ? */
#undef SPRINTF_CHAR

/* SysV IPC exists ? */
#undef HAVE_SYS_MSG_H
#undef HAVE_SYS_IPC_H
#undef HAVE_MSGSND
#undef HAVE_MSGRCV
#undef HAVE_MSGCTL

/* Any YP things ? */
#undef HAVE_YP

/* For the router/conf.c */
#undef RFC822TABS
