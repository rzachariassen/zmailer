		MAILQ protocol version 2


Scheduler writes following to the interface socket:

	"version zmailer 2.0\n"
	"some magic random gunk used as challenge\n"

Then client writes there:

	"AUTH username HEXAUTHENTICATOR\n"

and scheduler replies:

	"- some message \n"
	"+ some message \n"

where "+" at line beginning is success (and anything else is failure).

That done, initial login phase has completed, and actual command interface
can commence.

The HEXAUTHENTICATOR is calculated by catenating the challenge line
(without its ending '\n'), and user password, and doing MD5 over them.
Then the resulting message digest is printed out bytewise with "%02x",
that is, lowercase hex characters.


	---------- ToBeWritten: commands ... -------------
	(and multiline replies, and state things, and ...)

SHOW QUEUE SHORT
	- Success/Failure indicating reply; "+ xxxx" = success, "- xxx" = fail
	- On success a multiline appendix with SMTP DATA phase dot-duplication
	  rules (same as with POP3)

SHOW QUEUE THREADS
	- Success/Failure indicating reply; "+ xxxx" = success, "- xxx" = fail
	- On success a multiline appendix with SMTP DATA phase dot-duplication
	  rules (same as with POP3)

SHOW SNMP
	- Success/Failure indicating reply; "+ xxxx" = success, "- xxx" = fail
	- On success a multiline appendix with SMTP DATA phase dot-duplication
	  rules (same as with POP3)

ETRN etrn_string
	- Single-line reply

SHOW THREAD channel host

KILL MSG spoolid           (expires the message -- all recipients)

KILL THREAD channel host   (expires the thread)

REQUEUE ROUTER spoolid     (?? - from a TODO item..)
