'\" t
.\" $Header$
.ds ]W "ZMailer 2.99"
.TH SMTPSERVER 8zm "2003-Aug-28"
.SH NAME
smtpserver \- zmailer SMTP server
.SH SYNOPSIS
.IP \fBsmtpserver\fR 11em
.RS 11em
[\fB\-46aBhigntVvw\fR]
[\fB\-p\fR\ \fIport\fR]
[\fB\-l\fR\ \fISYSLOG\fR]
[\fB\-l\fR\ \fIlogfile\fR]
[\fB\-s\fR[\fBftveR\fR]]
[\fB\-s\ \fCstrict\fR]
[\fB\-I\fR\ \fIpidfile\fR]
[\fB\-L\fR\ \fImaxloadaver\fR]
[\fB\-M\fR\ \fISMTPmaxsize\fR]
[\fB\-P\fR\ \fIpostoffice\fR]
[\fB\-R\fR\ \fIrouter\fR]
[\fB\-C\fR\ \fIcfgfile\fR]
[\fB\-Z\fR\ \fIzenvfile\fR]
[\fB\-T\ \fI'[1.2.3.4]'\fR]
.RE
.SH DESCRIPTION
This program implements the server side of the SMTP protocol as described
in RFC-2821, and knows about the common extensions to the protocol expected
by Sendmail and BSMTP clients.
.PP
By default the program will kill the previous
.IR smtpserver (8zm)
daemon, if any, then detach and listen for SMTP connections.
Incoming messages will be submitted for processing using the
.IR zmailer (3zm)
interface to ZMailer.
Nontrivial address checking is done asynchronously, although this behaviour
can be changed by a command line option if you cannot afford to transfer
data just to bounce it back.
All checking is done by executing the
.IR router (8zm)
program in interactive mode, and executing a well-known shell function with
well-known parameters for each request.
.PP
.SH OPTIONS
.PP
.IP \-4
.RS
Explicitely to use IPv4 type of socket even on machines that is capable to
do IPv6 type of sockets.
.RE
.IP \-6
.RS
Explicitely to (try to) use IPv6 type of socket even if the machine does
not support it.
For a default the server will try to use IPv6, if it has been compiled on
an environment where it is present, but will do a fallback to IPv4 in case
the runtime system does not have IPv6.
.RE
.IP \-a
.RS
turn on RFC931/RFC1413 indentification protocol, and log the information
acquired with it to the submitted file.
.RE
.IP \-w
.RS
turn on usage of "whoson" protocol.  This option is available even if
actual code is not available.
.RE
.IP \-g
.RS
the gullible option will make the program believe any information it is
told (such as origin of a connection) without checking.
.RE
.IP \-h
.RS
check helo-parameter,  per default that is
.B not
checked in any way, with this option, syntax check is done on it.
.RE
.IP \-i
.RS
runs the server interactively, which makes it usable for processing
a batched SMTP stream (BSMTP) on stdin.
With
.I \-v
option this echoes incoming BSMTP to create more accurate faximille
of BITNET BSMTP mailers.
.RE
.IP "\-l \fISYSLOG\fR"
.RS
A magic value of "SYSLOG" for the
.I logfile
is interpreted by directing all session log stuff thru syslogd;
something which
.B may
require better syslogd, than your system
has by default; see ``syslog-ng'' at a well indexed free software
sites.
.RE
.IP "\-l \fIlogfile\fR"
.RS
specifies a logfile and enables recording of incoming SMTP conversations.
If you want both file based session log, and syslog() based, issue this
option after ``\-l\ SYSLOG'' one.
.RE
.IP "\-n "
.RS
indicates the program is being run from
.IR inetd (8).
.RE
.IP "\-p "
.RS
specifies the TCP port to listen on instead of the default SMTP port, 25.
.RE
.IP "\-B "
.RS
flags the email to arrive via BSMTP channel (via BITNET, for example).
.RE
.IP "\-I \fIpidfile\fR"
.RS
specifies an alternate PID file location.
.RE
.IP "\-L \fImaxloadaver\fR"
.RS
tells the maximum load-average the system is under when we still accept
email in.
.RE
.IP "\-M \fISMTPmaxsize\fR"
.RS
Defines the asolute maximum size we accept from incoming email.
(Default: infinite) (This is local policy issue.)
.RE
.IP "\-P \fIpostoffice\fR"
.RS
specifies an alternate
.B POSTOFFICE
directory.
.RE
.IP "\-R \fIrouter\fR"
.RS
specifies an alternate
.I router (8zm)
program to use for address verification.
.RE
.IP "\-C \fIcfgfile\fR"
.RS
specifies nonstandard configuration file location; the default is
.IR $MAILSHARE/ smtpserver.conf .
.RE
.IP "\-s strict"
.RS
this turns on all kinds of
.B strict
smtp protocol adherence checks, which in normal life can be relaxed
slightly.  Great for compliance testing ;)
.RE
.IP "\-s [ftveRS]"
.RS
specifies the style of address verification to be performed.  There are
four independent commands that can invoke some kind of address verification,
and four independent flags to control whether this should be done.
They are:
.PP
.IP f
check MAIL FROM addresses
.IP t
check RCPT TO addresses
.IP v
check VRFY command argument
.IP e
check EXPN command argument
.IP R
require addresses to be of syntax:
local@remote (strict 2821)
.IP S
.RS
allow sloppy input for systems incapable to respect RFC 821 properly; WinCE1.0 (and 2.0) does:
.RS 3em
"MAIL FROM:user@domain"
.RE
:\-(
.RE
.PP
The flags are concatenated to form the argument to the \-s option.  The
default is \fBve\fR.
.RE
.IP "\-T '[1.2.3.4]'"
.IP "\-T '[ipv6.hhhh:hhhh:hhhh:hhhh:hhhh:hhhh:1.2.3.4]'"
.RS
Supply (in interactive mode) test address for policy dataset address testing.
The optionset recommended for that case is:
.PP
.nf
   \-i \-d 1 \-T '[1.2.3.4]'
.fi
.PP
A notable detail is that to see what really is going on in
the policy analysis,one must usei the ``-d\ 1'' option to
turn on the debugging early enough to see its initial verdict
at the time the ``220..'' greeting banner is produced..
.PP
Also notable is that
.B brackets
in the supplied IP address
.B must
be present, otherwise illegal syntax will be reported.
(Using RFC 821 address literal parser here.)
.RE
.IP \-t
.RS
Set when running smtpserver under e.g. inetd, and using service port
number 465; a "well-known" deprecated one of SSL/SMTP; (From the era
before ``STARTTLS'' protocol verb.)
.RE
.IP "\-Z \fIzenvfile\fR"
.RS
passes on explicite non-compiled-in-default located ZCONFIG environment file.
.RE
.IP \-V
.RS
prints a version message and exits.
.RE
.PP
.SH CONFIGURATION
If the
.IB $MAILSHARE/ smtpserver.conf
exists it is read to configure two kinds of things:
.PP
.IP "PARAM \-entries"
.RS
allow server start-time parametrization of several things, including:
.PP
.RS 1em
.IP \(bu 2em
help-texts
.IP \(bu 2em
acceptance/rejection database definitions
.IP \(bu 2em
various feature parametrizations
.RE
.PP
On PARAM lines the system allows $-expansions of ZENV variables.
(Special note: '$$' expands as '$', not shell-style process-id number!)
.RE
.IP "The style (\fI\-s\fR) option"
.RS
behaviour based on glob patterns matching the
.BR HELO / EHLO
name given by a remote client.  Lines beginning with a
.I "#"
or whitespace are ignored in the file, and all other lines must consist
of two tokens: a shell-style (glob) pattern starting at the beginning of
the line, whitespace, and a sequence of style flags.  The first matching
line is used.  As a special case, the flags section may start with a
.I "!"
character in which case the remainder of the line is a failure comment
message to print at the client.
This configuration capability is intended as a way to control
misbehaving client software or mailers.
.RE
.IP "PARAM maxsize"
.RS
This is synonym to start-time
.I \-M
option.
.RE
.IP "PARAM min\-availspace 5000"
.RS
This defines, in
.BR kilobytes ,
the minimum available space in
.B POSTOFFICE
directory after the message has been accepted in.
.RE
.IP "PARAM max\-error\-recipients"
.RS
This defines how many recipients can be on a message whose source
address is
.B MAIL FROM:<>\fR.
That is, is an error message.  (Sometimes SPAMs are tried to inject
in that form...)
.RE
.IP "PARAM MaxSameIpSource"
.RS
This sets the maximum number of active connections from any given
single IP address.
.PP
When the limit is reached, system tells the remote end:
.RS 3em
.B "450 Too many simultaneous connections..."
.RE
(and then closes the connection.)
.PP
When the limit is exceeded by factor of four, the server just closes
the connection without telling anything.
.PP
.B "Do note that this works only when the smtpserver"
.B " is running as its own daemon, not while run from"
.B "under inetd!"
.RE
.IP "PARAM MaxParallelConnections"
.RS
This limits how many simultaneous connections the server will accept
in total -- e.g. how many childs a master server can have running.
Default value: 800.
.PP
Exceeding the limit by less than 100 will get a message
.RS 3em
.B "450 Too many simultaneous connections..."
.RE
printed to the connection.
In every case the connection is closed right after the possible message.
.PP
.B "Do note that this works only when the smtpserver is running"
.B "as its own daemon, not while run from under inetd!"
.RE
.IP "PARAM ListenQueueSize"
.RS
This sets the listen queue size parameter for
.IR listen (2)
call at the server.
.RE
.IP "PARAM TcpRcvBufferSize"
.RS
This sets  setsockopt(SO_RCVBUF)  value, in case the system
default is not suitable.
.RE
.IP "PARAM TcpXmitBufferSize"
.RS
This sets  setsockopt(SO_SNDBUF)  value, in case the system
default is not suitable.
.RE
.IP "PARAM RcptLimitCount 10000"
.RS
This sets the maximum number of accepted recipients per one
message transaction.  Default (and minimum!) value is 100,
which is mandated by the RFC 821.
.RE
.IP "PARAM BindPort    25"
.IP "PARAM BindAddress [0.0.0.0]"
.IP "PARAM BindAddress [IPv6.0::0]"
.IP "PARAM BindAddress iface:ifacename"
.RS
Per default the server mode SMTP-server binds to port 25 and any
locally accepted address, but occasionally people seem to want to
have separate server instances with different configurations, and
for those cases are these parameters.
.PP
Multiple instances of
.I BindAddress
will work, and bind all presently supported ports to all those
addresses.
.RE
.IP "PARAM DEBUGcmd"
.IP "PARAM EXPNcmd"
.IP "PARAM VRFYcmd"
.RS
This trio (DEBUGcmd, EXPNcmd, VRFYcmd) are enablers of like named 
SMTP verbs which have some uses in the debug mode.
.PP
They are normally disabled, but running them enabled does not allow
direct attacks with them.  (That we know of.)
.RE
.IP "PARAM enable\-router"
.RS
This enables interactive router use where user inputs reach the router.
As things turn out, while the canned scripts should be safe against any
and all inputs, a careless change in the router scripts may endanger
this status.
.PP
Per default this is
.B disabled
to protect your system.
.PP
To enable EXPN and VRFY, this must be enabled, but be
.B very carefull
when you do this.
This is also required for interactive router processing
of ``MAIL FROM'' and ``RCPT TO'' addresses.
.RE
.IP "PARAM smtp\-auth"
.RS
This enables 'SMTP AUTH' facility (AUTH verb, plus optional parameter
to MAIL verb).  With this the users who are able to 'login' successfully
to this host, are then able to relay the email thru the server unlimited.
.RE
.IP "PARAM AUTH\-LOGIN\-also\-without\-TLS"
.RS
This enables 'SMTP AUTH' facility usage also without running
under SSL/TLS security envelope.
.RE
.IP "PARAM smtp\-auth\-sasl"
.RS
If the system has been configured with
.I SASL2
support, use that instead of built-in plain-text authenticator code.
.PP
.B "Presently experimental code!"
.RE
.IP "PARAM smtp\-mechanisms mech name list"
.RS
List only those mechanisms that are wanted to be supported in the
running system.
Undefined list means: any and all what the SASL-system supports.
.RE
.IP "PARAM MSA\-mode"
.RS
Enable Message Submission Agent mode, where smtpserver
.B requires
successful user authentication during SMTP sessions initiated from
outside of the trusted networks or the networks with relaying enabled
(see "fulltrustnet" and "relaycustnet" at the sample
.I proto/db/smtp\-policy.src
file).
.RE
.IP "PARAM SMTP\-auth\-pipe /path/to/program"
.RS
This is a path to the external authentication program.
The authenticator should read a username from command line,
and a password from standard input.
Exit status 0 means successful authentication.
.PP
\fBIt is relatively easy to make a mistake in external authentication
\fBprogram that follows the specification. Use this option only if
\fByou know exactly what you do! BE CAREFULL!\fR
.RE
.IP "PARAM use\-tcp\-wrapper"
.RS
If TCP-WRAPPER is configured in, uncommenting this
will activate its use to look service name:  smtp-receiver
.RE
.IP "PARAM No8BITMIME"
.IP "PARAM NoCHUNKING"
.IP "PARAM NoDSN"
.IP "PARAM NoEHLO"
.IP "PARAM NoENCHANCEDSTATUS(CODES)"
.IP "PARAM NoETRN"
.IP "PARAM NoPIPELINING"
.RS
This set contains
.B disablers
of like named Extended SMTP EHLO responses, plus EHLO verb itself,
e.g. using these will turn off given (for example ``PIPELINING'')
response from the EHLO replies, and then a client possibly capable
to feed PIPELINING will not do it -- unless it breaks rules, and
does it even when the server does not report facility being available.
.PP
If you want to disable any of these, you better have a good reason
for it, as in general they work quite fine.
.PP
Of these, 8BITMIME can not in reality be disabled, only its adverticement
can be turned off.
.RE
.IP "PARAM no\-multiline\-replies"
.RS
Turn off ZMailer's default multiline replies; many systems (especially
from M$ breed) don't do RFC 821 Appendix E properly...
.RE
.IP "PARAM force\-rcpt\-notify\-never"
.RS
Whatever the incoming DNS NOTIFY= value is, we force it always
to be NOTIFY=NEVER.   This is for those who won't like to let
others even to find out that the message made into the system,
but still want to support incoming DSN. (That is, not to disable DSN!)
.RE
.IP "PARAM hdr220 a string of stuff"
.RS
This allows full customization of the initial greeting message.
For details, see the sample configuration below.
.RE
.IP "PARAM help ...."
.RS
This allows adding locally relevant data into the SMTP protocol
HELP command response texts.
See example in the sample configuration below.
.RE
.IP "PARAM policydb DBTYPE /path/to/dbfile"
.RS
This defines smtp input policy filtering/analysis database location.
See the comments at the sample
.I proto/db/smtp\-policy.src
file.
.PP
An error here will be reported with obscureish code;
"1" = "DBTYPE parameter unknown/unsupported",
"2" = "can't open the database".
.RE
.IP "PARAM contentfilter $MAILBIN/smtp-contentfilter"
.RS
An external program for received message content analysis.
.PP
The interface is desribed below at
.I "CONTENTFILTER INTERFACE"
section.
.RE
.IP "PARAM debug\-contentfilter"
.RS
Sends some debug-data of the content-filter interface
into the smtpserver protocol log file.
.RE
.IP "PARAM tarpit initial exponent toplimit"
.RS
This defines a pre-reply slow-down factor, and next delay multiplier
(both are integers).
Default values are (0, 0).  Delay tops at 250 (seconds).
The ``initial'' is used as the initial tarpit delay,
and ``exponent'' is multiplier for formula:
.I next = prev + (prev * exponent)
.PP
Finally, ``toplimit'' caps the delay value.
.RE
.IP "PARAM use\-tls"
.IP "PARAM tls\-CAfile $MAILVAR/db/smtpserver\-CAcert.pem"
.IP "PARAM tls\-cert\-file  $MAILVAR/db/smtpserver\-cert.pem"
.IP "PARAM tls\-key\-file   $MAILVAR/db/smtpserver\-key.pem"
.RS
These are TLSv1 parameters, and all parts of this parameter cluster
must be set for the facility to work!
.PP
See   doc/guides/openssl,  or:
http://www.aet.tu-cottbus.de/personen/jaenicke/pfixtls/doc/setup.html
(until something ZMailer specific gets written...)
.PP
Also see below section
.BR "OPENSSL RELATED PARAMETERS" .
.RE
.IP "PARAM tls\-dh512  $MAILVAR/db/smtpserver\-cert\-dh512.pem"
.IP "PARAM tls\-dh1024 $MAILVAR/db/smtpserver\-cert\-dh1024.pem"
.RS
Optional file to supply auxiliary DH parameters for the key exchange,
in case the certificate is so old, that it does not contain them.
The system has built-in default values for these.
.RE
.IP "PARAM listen\-ssmtp"
.RS
Listen on port TCP/465, which is deprecated SSL/SMTP listener port.
.RE
.IP "PARAM outlook\-tls\-bug"
.RS
Microsoft does it again...
If TLS is set at Outlook, and server port is not 25, it bloody well
seems to expect that the server starts in TLS handshake mode.
.PP
This implements a 2 second startup delay in case the port is some
other than 25, and if some byte is received from client during that
time, and it happens to be 0x80, then this server will initiate TLS
negotiation.  If nothing happens (well-behaving client), normal
SMTP greeting is presented.
.RE
.IP "PARAM tls\-loglevel   0"
.IP "PARAM tls\-ccert\-vd   0"
.IP "PARAM tls\-ask\-cert   0"
.IP "PARAM tls\-require\-cert 0
.IP "PARAM tls\-CApath ... (somewhen: verify client's certificates)"
.IP "PARAM tls\-enforce\-tls 1"
.RS
These are some futher thoughs that may materialize some time..
.RE
.IP "PARAM rcvd\-ident"
.IP "PARAM rcvd\-whoson"
.IP "PARAM rcvd\-auth\-user"
.IP "PARAM rcvd\-tls\-mode"
.IP "PARAM rcvd\-tls\-peer"
.RS
This quintet controls what possibly collected data is shown at
the published ``Received:'' header that this system generates.
.RE
.IP "PARAM etrn\-cluster node\-name\-or\-address mq2\-username mq2\-passwd"
.RS
In load-balance clusters a network level load-balancer may distribute
the incoming SMTP connections to multiple real machines, and by using
this parameter (repeatedly) to list those peers, system can relay
user initiated ETRN requests to all cluster nodes.
.PP
.I "This method requires that the scheduler runs its mailq service"
.I "in MAILQv2 mode!"
.RE
.IP "PARAM lmtp\-mode"
.RS
When desiring to test LMTP (RFC 2033), this parameter can be turned on,
.I "however ZMailer is no real LMTP server, and this feature is"
.I "only for debug purposes."
.RE
.IP "Here is a possible configuration file:"
.RS 2em
.nf
\fC
#
# smtpserver.conf - autogenerated edition
#
#PARAM maxsize        10000000 # Same as -M -option
#PARAM min-availspace     5000 # Minimum free in POSTOFFICE after
#                              # message has arrived; in kBs.
#PARAM max-error-recipients  3 # More than this is probably SPAM!
#PARAM max-unknown-commands 10 # More than this is probably broken
#                              # client
#PARAM MaxSameIpSource      10 # Max simultaneous connections
#                              # from any IP source address
#PARAM MaxParallelConnections 800 # Max simultaneous connections
#                              # in total to the server
#PARAM TcpRcvBufferSize  32000 # Should not need to set!
#PARAM TcpXmitBufferSize 32000 # Should not need to set!
#
#PARAM ListenQueueSize      10 # listen(2) parameter
#
#PARAM RcptLimitCount    10000 # Max number of recipients for one
#                              # MAIL FROM session. Minimum: 100
#
#PARAM BindPort          25    # Binding port
#PARAM BindAddress  [0.0.0.0]  # Binding address - for multihomers..
#PARAM BindAddress [IPv6.0::0] # and here is for IPv6 - NO SPACES!
#
# Enables of some commands:
#PARAM  DEBUGcmd
PARAM   EXPNcmd
PARAM   VRFYcmd
PARAM  enable-router
#               # This is a security decission for you.
#               # This is needed for EXPN/VRFY and interactive
#               # processing of MAIL FROM and RCPT TO addresses.
#               # However it also may allow external user entrance
#               # to ZMailer router shell environment with some
#               # suitably pervert input, if quotation rules are
#               # broken in the scripts.
#
#PARAM  smtp-auth-sasl
#               # Authentication with SASL[2] mechanisms
#               # in the system.  Enabling this takes precedence over
#               # smtp-auth below!
#
#PARAM  sasl-mechanisms  LIST OF SASL MECHANISMS
#               # A space delimittered list of SASL mechanisms we
#               # want to support.
#
#PARAM  smtp-auth
#               # enable if you want to allow SMTP to autenticate
#               # with the default code against system /etc/passwd
#               # (or whatever source  getpwnam() uses for it..)
#
#PARAM  AUTH\-LOGIN\-also\-without\-TLS
#               # Enable, if the "AUTH LOGIN" is to be allowed to
#               # be used without running under SSL/TLS security
#               # envelope.
#
#PARAM  MSA-mode
#               # Message Submission Agent mode. Require
#               # successful user authentication during SMTP
#               # sessions initiated from outside of the trusted
#               # networks or the networks with relaying enabled
#               # (see "fulltrustnet" and "relaycustnet" in
#               # smtp\-policy.src file).
#
#PARAM  SMTP-auth-pipe /path/to/program
#               # External authentication program. The
#               # authenticator should read a username from
#               # command line and a password from standard input.
#               # Exit status 0 means successful authentication.
#
#PARAM  use-tcp-wrapper
#               # If TCP-WRAPPER is configured in, uncommenting this
#               # will activate its use to look service name:  smtp-receiver
#
# Disablers of some facility adverticements
#PARAM  NoEHLO
#PARAM  NoPIPELINING
#PARAM  No8BITMIME
#PARAM  NoCHUNKING
#PARAM  NoDSN
#PARAM  NoETRN
#PARAM  no-multiline-replies # except to EHLO
#PARAM  force-rcpt-notify-never # Want to hide something...
#
# HDR220 metatags:
#  %% -- '%' character
#  %H -- SS->myhostname
#  %I -- '+IDENT' if 'identflg' is set
#  %V -- VersionNumb
#  %T -- curtime string
#  %X -- xlatelang parameter
#
#PARAM hdr220 %H ZMailer ESMTP-server %V running at Yoyodyne Inc.
#PARAM hdr220 %H (NO UCE)(NO UBE) our local time is now %T
#
PARAM help ------------------------------------------------------
PARAM help  This mail-server is at Yoyodyne Propulsion Inc.
PARAM help  Our telephone number is: +1-234-567-8900, and
PARAM help  telefax number is: +1-234-567-8999
PARAM help  Our business-hours are Mon-Fri: 0800-1700 (TZ: -0700)
PARAM help
PARAM help  Questions regarding our email service should be sent
PARAM help  via email to address  <postmaster@OURDOMAIN>
PARAM help  Reports about abuse are to be sent to: <abuse@OURDOMAIN>
PARAM help ------------------------------------------------------
#
# Uncomment following for not to strip incoming addresses of
# form: <@aa,@bb:cc@dd> into non-source-routed base form: <cc@dd>
#
#PARAM allowsourceroute
#
# The policy database:
# (NOTE: See `makedb' for its default suffixes!)
#
PARAM  policydb   $DBTYPE  $MAILVAR/db/smtp\-policy
#
# External program for received message content analysis:
#PARAM  contentfilter  $MAILBIN/smtp-content-policy-analysis
#PARAM  debug-contentfilter # Debug the content-filter interface

#PARAM  tarpit 0 0 0    # No "tarpit" for 4XX/5XX reply codes
#PARAM  tarpit 20 2 300 # Initial delay: 20 secs, next = prev + (prev * 2)

#
# TLSv1/SSLv[23] parameters;
# all must be used for the system to work!
#
# See   doc/guides/openssl,  or:
# http://www.aet.tu-cottbus.de/personen/jaenicke/pfixtls/doc/setup.html
#
#PARAM  use-tls
##PARAM listen-ssmtp    # A deprecated TCP/465 port listener for SSL/SMTP
##PARAM outlook-tls-bug # Variant of ssmtp
#
#PARAM  tls-CAfile      $MAILVAR/db/smtpserver-CAcert.pem
#PARAM  tls-cert-file   $MAILVAR/db/smtpserver-cert.pem
#PARAM  tls-key-file    $MAILVAR/db/smtpserver-key.pem
#PARAM  tls-dh512       $MAILVAR/db/smtpserver-dh512.pem
#PARAM  tls-dh1024      $MAILVAR/db/smtpserver-dh1024.pem
#  # Then some futher thoughs that may materialize some time..
#PARAM tls-loglevel     0
#PARAM tls-ccert-vd     0
#PARAM tls-ask-cert     0
#PARAM tls-require-cert 0
##PARAM tls-CApath ... (somewhen: verify client's certificates)
##PARAM tls-enforce-tls 1

# Elements to be added into "Received:" header's
# initial comment part:
#
#PARAM rcvd-ident       # The ident lookup result
#                       # (or even admitting it having queried)
#PARAM rcvd-whoson      # Likewise for "whoson"
#PARAM rcvd-auth-user   # Authenticated Username
#PARAM rcvd-tls-mode    # Cipher or not
#PARAM rcvd-tls-ccert   # Client Certificate reference

# EGD/PRNGD type entropy source for OpenSSL in case your
# system does not have  /dev/*random  devices:
#
#PARAM tls-random-source /var/run/prngd-socket


# A load-balanced server cluster may want to communicate
# the ETRN request to cluster components, here is how:
# See also:  doc/guides/etrn-cluster
#
#PARAM etrn-cluster localhost mq2-username mq2-passwd
#PARAM etrn-cluster node-2-name-or-address mq2-username mq2-passwd
#PARAM etrn-cluster node-3-name-or-address mq2-username mq2-passwd
#...
#PARAM etrn-cluster node-40-name-or-address mq2-username mq2-passwd

#
#
# HELO/EHLO-pattern     style-flags
#               [max loadavg]
#
localhost           999 ftveR
some.host.domain    999 !NO EMAIL ACCEPTED FROM YOUR MACHINE
# If the host presents itself as:  HELO [1.2.3.4]  be lenient to
# it..  The syntax below is due to these patterns being SH-GLOB
# style patterns where the brackets are special characters.
\\[*\\]               999 ve
# Per default demant strict syntactic adherence, including fully
# qualified addresses for  MAIL FROM, and RCPT TO.  To be lenient
# on that detail, remove the "R" from "veR" string below:
*                   999 veR
.fi
.sp
.RE
.SH CONTENTFILTER INTERFACE
.PP
The
.I contentfilter
interface has been modified a few times, see your
.B README.UPGRADING
file for details matching your running setup.
.PP
The
.I contentfilter
program is started without parameters running userid of
.I daemon 
in directory $POSTOFFICE.
.PP
The protocol in between the
.IR smtpserver (8zm),
and the content-policy program is a clone from the scheduler to
transport-agent one.
Namely:
.PP
.RS 2em
0) server: spawn a sub-process for the policy program
.PP
1) policy: \fC"#hungry\\n"\fR
.PP
2) server: \fC"jobfilepath\\n"\fR
.PP
3) policy: \fC"RESULT DATA\\n"\fR
.PP
The loop repeats from 1, and terminates at 2, when the
content-filter program reads an EOF.
.PP
The
.I smtpserver
does expect that the
.I contentfilter
program behaves according to this protocol, and e.g. a system
where the filter program runs once, and exists, has in the past
proven incompatible with the system.
.RE
.PP
General rule:
.nf
\fC
 -1 550 5.7.1 negatives are condemned into rejection
  0 250 2.6.0 zero is ok! gladly accepted
  1 550 5.7.1 positives are sent into the freezer
.fi
.PP
The program
.I may
choose to order rejection, and report acceptance, or which way ever:
.nf
\fC
 -1
 -1 250 2.7.1 Glad to see some spam, immediately destroyed :)
  0
  0 250 2.6.0 Message OK!
  1
  1 550 5.7.1 That is spam, rejected!
.fi
.PP
If the message has no text, some defaults are supplied.
If the message text starts with numbers, it is presumed
that it contains both the SMTP reply code, and ENHANCEDSTATUSCODE
before the text.
(If no ENHANCEDSTATUSCODE part is present,
then some possibly senseless default is supplied.)
.PP
Interface message text lines beginning with anything except signed integer
are logged, and the communication channel from the smtpserver to the
contentfilter program is closed.
Interface continues to scan things reported by the contentfilter program,
and if no properly formatted line appears, default is to send the message
into the freezer with code "1".
.PP
The message text
.B may
contain CR characters, in which case the code in smtp-server will
produce multi-line replies to the message originator.
.PP
Keep always in mind, that SMTP protocol (and thus the message texts here)
are presumed to be plain 7-bit US-ASCII!
However: You may (most of the time) get away with 8-bit chars in the texts...
.SH TCP\-WRAPPER AND SMTPSERVER
If the ZMailer system is configured with \fItcp-wrapper\fR code,
and ``PARAM use\-tcp\-wrapper'' is active in configuration,
then service-id "\fCsmtp-receiver\fR" is looked for all those addresses
that are allowed to feed SMTP email in.
.PP
Usually this mode of operation is not used, and files
.IR hosts.allow ,
and
.I hosts.deny
contain following kind of entries:
.PP
.RS 3em
.nf
\fI/ETC/hosts.allow\fC
mailq : ALL@1.2.3.0
smtp\-receiver: ALL@ALL

\fI/ETC/hosts.deny\fC
ALL : ALL@ALL\fR
.fi
.RE
.PP
Alternatively, all the functions which tcp-wrapper could supply are
also available thru the policy database machinery.
.PP
.I "(Do note that scheduler(8zm) has also tcp\-wrapper support, which becomes"
.I "active simultaneously with smtpserver's tcp\-wrapper code!)"
.P
.SH "SASL[2] AUTHENTICATION MECHANISMS"
The
.I smtpserver
does contain
.B experimental
code supporting authentication interaction using SASL mechanisms
as they are implemented in 
.I "CMU Cyrus\-SASL\-2"
library.
.PP
This will also necessitate adding SASL\-2 library related
configuration telling what backside systems are to be used.
Possible configuration file is:
.PP
.RS 3em
.nf
# ---- /usr/lib/sasl2/smtpserver.conf ----
\fCpwcheck_method: saslauthd
.fi
.RE
.SH TLS MODE
.PP
.B "TO BE WRITTEN;"
Some further notes on how to setup the TLS encryption on the
.IR smtpserver (8zm).
For the time being, see notes at "doc/guides/openssl"
as well as what is written above at the "PARAM use\-tls", or
there abouts.
.PP
.SH SMTP\-AUTH -- AUTHENTICATE (RELAY) USER
.PP
The idea with "smtp\-auth" is to authenticate the user who wants
extra privileges from the SMTP service, namely if a user wants to
send email to an address considered non-local at the system, this
user needs special privilege.
.PP
In usual cases the privilege is granted based on IP address of the
user (See "smtp\-policy.relay*" below in SMTP\-Policy Configuration).
.PP
The privilege can also be granted by doing a "login" procedure
where the user gives some personal identifier, and related secret.
.PP
Becase the normal authenticator is a plain-text password, this
operation should be done under the security envelope of the SSL.
(Or equivalent under IPSEC encryption, although ZMailer's smtpserver
does not know how to detect the session being IPSEC protected!)
.PP
You will likely need:
.RS 2em
.IP \(bu 3em
"PARAM smtp\-auth"
.IP \(bu 3em
The TLS related notes above.
.RE
.PP
Possibly also:
.RS 2em
.IP \(bu 3em
"PARAM AUTH\-LOGIN\-also\-without\-TLS"
.IP \(bu 3em
"PARAM SMTP\-auth\-pipe /path/to/program"
.IP \(bu 3em
And possibly also PAM\-support for SMTP\-Auth, see below.
.RE
.PP
.SH PAM\-SUPPORT FOR SMTP\-AUTH
If the system has <security/pam_appl.h> file, following file will also
be needed for the system:
.PP
.nf
\fC
------- /etc/pam.d/smtpauth-login -----------
#%PAM-1.0
auth     required  /lib/security/pam_pwdb.so shadow
auth     required  /lib/security/pam_nologin.so
account  required  /lib/security/pam_pwdb.so
.fi
.SH SMTP\-POLICY CONFIGURATION
This subsystem of
.IR smtpserver (8zm)
does control acceptability of recipient envelope addresses per several
criteria:
.PP
.RS 2em
.IP \(bu 3em
"contactee IP address"
.IP \(bu 3em
SMTP "MAIL FROM:<..>" address
.IP \(bu 3em
SMTP "RCPT TO:<..>" addresses
.IP \(bu 3em
"various control files"
.RE
.PP
Specifically the
.I $MAILBIN/policy-builder.sh
script uses following files:
.PP
.TS
l l.
MAILVAR/db/smtp\-policy.src	The boilerplate
MAILVAR/db/localnames	('= _local_names')
MAILVAR/db/smtp\-policy.relay.manual	('= _full_rights')
MAILVAR/db/smtp\-policy.relay	('= _full_rights')
MAILVAR/db/smtp\-policy.mx.manual	('= _relaytarget')
MAILVAR/db/smtp\-policy.mx	('= _relaytarget')
MAILVAR/db/smtp\-policy.spam.manual	('= _bulk_mail')
MAILVAR/db/smtp\-policy.spam	('= _bulk_mail')
.TE
.PP
.B "If you want, you can modify your boiler plate,"
.I "as well as your installed"
.I policy\-builder.sh
.B script.
(Doing 'make install' will overwrite
.IR policy\-builder.sh ,
but not
.IR smtp\-policy.src )
.PP
Basically these various source files (when existing) are used to
combine knowledge of valid users around us.  Some datasets have
.I two
input source files,
.I smtp\-policy.NN
and
.IR smtp\-policy.NN.manual ,
the ".manual" is intended to be overrider of of possibly autogenerated
data at the "plain" version of files.
.PP
.IP localnames
.RS
Who we are -- ok for receiving; does not
grant outgoing relay capability.
.RE
.IP smtp\-policy.relay
.IP smtp\-policy.relay.manual
.RS
Who can use us as outbound relay.
.PP
Use here
.PP
.RS
[ip.number]/maskwidth
.RE
.PP
for listing those senders (networks) we
absolutely trust.  Additionally you may give
(at the same line) some attributes as parameters
for this key entry:
.PP
.RS
fulltrustnet +
trustrecipient +
.RE
.PP
First pair will accept any source address,
and any recipient addresses that are fed to
the server;  the second will verify the source
address, but after that it will accept any
recipient addresses.
.PP
You may also enter domains which are looked
up for the hostname of reversed IP address,
but it is not very wise; IP-reversal is not
trustworthy data.  It may also cause double-
entry/level descendance problems when two
domain-suffixes have same ending suffix (or
are the same)..  (Name/keyspace problem)
.PP
We can set the internal "always_accept" flag at
the source IP test, and never after.
.PP
.RE
.IP smtp\-policy.mx
.IP smtp\-policy.mx.manual
.RS
Who really are our MX clients.
.PP
Use this when you really know them, and don't
want just to trust that if recipient has MX
to you, it would be ok...
You can substitute this knowledge with a fuzzy
feeling by using 'acceptifmx +' attribute at
the generic boilerplate.
.PP
List here
.I domain names.
.PP
You CAN also list here all POSTMASTER addresses
you accept email routed to:
.PP
.RS
postmaster@local.domain
postmaster@client.domain
.RE
.PP
these are magic addresses that email is accepted
to, even when everything else is blocked.
.PP
.RE
.IP smtp\-policy.spam
.IP smtp\-policy.spam.manual
.RS
Those users & domains that are absolutely no-no
for the senders, or the recipients, no matter what
earlier analysis has shown.
(Except for those that we absolutely trust..)
.PP
.RE
Short usage instructions:
.PP
.RS 2em
.IP \(bu 3em
Fill in/modify related files
.IP \(bu 3em
Execute \fIMAILBIN/policy-builder.sh\fR script
.RE
.RE
.PP
.SH SMTP\-POLICY TESTING
You can run the smtpserver in a mode where you can
claim to be from any address in the outside world
you wish:
.PP
.RS 4em
$MAILBIN/smtpserver \-i \-d 1 \-T '[1.2.3.4]'
.RE
.PP
The mode must be interactive (\-i), and supplying
debug mode (\-d 1) to it is good help.
.PP
Actual claimed connection source address is to be
given inside square brackets as a SMTP IP address
literal.
.PP
Now you can try things like:
.PP
.nf
\fC
  220 ...
  EHLO foo
  ...
  MAIL FROM:<>
  ...
  RCPT TO:<address@local.domain>
  ...
  RCPT TO:<address@elsewere.domain>
  ...
.fi
.PP
(Substitute some real domains into those RCPT TO
lines -- "local.domain" is a hint about what to
pick for it..)
.PP
Depending what kind of address you have supplied
to the -T parameter, they get either accepted, or
rejected.
.PP
.SH SMTP\-POLICY RBL\-TYPE BLOCKING LISTS
.PP
Per default the system
.B does not
use RBL-type blocking lists.
There are two ways how to take them into use: 
.PP
.IP 1. 4em
.RS 4em
 You can start rejecting at the connection setup and then at
MAIL FROM (and RCPT TO). 
.PP
However many (especially M$ environment) SMTP clients won't
react on that properly, and will just keep repeating the delivery
attempts. 
.RE
.IP 2.  4em
.RS 4em
You can delay the rejections until RCPT addresses are given. 
.RE
.PP
.SH SMTP\-POLICY; IMMEDIATE REJECTION BY RBL
.PP
Like mentioned above, this method has a problem with many clients
who don't believe that HELO can give 500-series response. 
.PP
Method is as follows: 
.PP
Pick your choice of databases to the second variant ``\fC_rbl0\fR'' label
by joining your selection from various things exemplified here below
by using ``\fC:\fR'' character as glue in between: 
.PP
.nf
  ``\fC+\fR'' alias ``\fCrbl.maps.vix.com\fR'' 
  ``\fCrelays.mail-abuse.org\fR'' 
  ``\fCdul.maps.vix.com\fR'' 
  ``\fCrelays.orbs.org\fR'' 
  ``\fCok.orbs.org:relays.orbs.org\fR'' <-- \fBTHIS IS A PAIR! 
.fi
.PP
For the ``\fCok.orbs.org:relays.orbs.org\fR'' the ZMailer 2.99.52patch2
has special support, but it isn't entirely fool-proof thing...
(Due to false OKs in the OK zone while NETBLOCK type things
exist at the RELAYS zone.)
.PP
An example for the resulting attribute pair: (RBL+DUL+RSS) 
.PP
.nf
\fC
  #| Second RBL variant: Early block with RBL+DUL+RSS
  _rbl0   test-dns-rbl  +:dul.maps.vix.com:relays.mail-abuse.org
  _rbl1   # Nothing
.fi
.PP
.SH SMTP\-POLICY; DELAYED REJECTION BY RBL
.PP
Delay the rejection report to ``\fCRCPT TO\fR'' verbs by using the
``Third RBL variant'': 
.PP
.nf
\fC
  #| Third RBL variant: Late block with RBL+DUL+RSS
  _rbl0   rcpt-dns-rbl      +:dul.maps.vix.com:relays.mail-abuse.org
  _rbl1   test-rcpt-dns-rbl +
.fi
.PP
The sample boilerplace will use these as defaults unless you choose
to explicitely have ``\fCtest-rcpt-dns-rbl -\fR'' at some of
the recipient domains you list at 
.I smtp\-policy.mx
file: 
.PP
.nf
\fC
  #sample.domain.with.rbl
  sample.domain.no.rbl    test-rcpt-dns-rbl -
.fi
.PP

.SH OPENSSL RELATED PARAMETERS
Because the TLS related code is fairly straight copy from
.I Postfix
specific one, the document is fairly direct copy, too..
.PP
.I "To use TLS we do need a certificate and a private key."
.I "Both must be in \"pem\" format, the private key must not"
.I  "be encrypted, that does mean: it must be accessable"
.I  "without password."
.I "Both parts (certificate and private key) may be in the same file."
.PP
.RS 2em
.nf
PARAM tls-cert-file  /etc/postfix/server.pem
PARAM tls-key-file   /etc/postfix/server.pem
.fi
.RE
.PP
.I "The certificate was issued by a certification authority (CA),"
.I "of which the CA-cert must be available."
.I "This file may also contain the the CA certificates of other trusted CAs."
.I "You must use this file for the list of trusted CAs if you want to use"
.I "chroot-mode."
.PP
.RS 2em
.nf
PARAM tls-CAfile /etc/postfix/CAcert.pem
.fi
.RE
.PP
.I "To verify the peer certificate, we need to know the certificates of"
.I "certification authorities."
.I "These certificates in \"pem\" format are collected in a directory."
.I "The same CAs are offered to clients for client verification."
.I "Don't forget to create the necessary \"hash\" links with"
.I "$OPENSSL_HOME/bin/c_rehash /etc/postfix/certs."
.I "A typical place for the CA-certs may also be $OPENSSL_HOME/certs,"
.I "so there is no default and you explicitly have to set the value here!"
.PP
.RS 2em
.nf
PARAM tls-CApath /etc/postfix/certs
.fi
.RE
.PP
.I "To get additional information during the TLS setup and negotiations"
.I "you can increase the loglevel from 0..4:"
.RS 4em
.IP 0: 4em
No output about the TLS subsystem
.IP 1: 4em
Printout startup and certificate information
.IP 2: 4em
1 + Printout of levels during negotiation
.IP  3: 4em
2 + Hex and ASCII dump of negotiation process
.IP  4: 4em
3 + Hex and ASCII dump of complete transmission after STARTTLS
.RE
.PP
.I "Use loglevel 3 only in case of problems."
.I "Use of loglevel 4 is strongly discouraged."
.PP
.RS 2em
.nf
PARAM tls-loglevel 0
.fi
.RE
.PP
.I "By default TLS is disabled, so no difference to plain ZMailer is visible."
.I "Explicitely switch it on here:"
.PP
.RS 2em
.nf
PARAM use-tls
.fi
.RE
.PP
.I "If the operating system isn't equipped with  /dev/*random  devices,"
.I "OpenSSL's"
.IR RAND_bytes (3)
.I "function will use compilation time defaults to locate EGD compatible"
.I "entropy source.  See dokumentation at:"
.IR RAND_egd (3)
.I "man-page.  If you have something similar in your system, but in"
.I "non-default location (see the man-page above), you can set its"
.I "location with this:"
.PP
.RS 2em
.nf
PARAM tls-random-source /var/run/prngd-socket
.fi
.RE
.PP
.SH ENVIRONMENT VARIABLES USED BY THE SMTPSERVER
The
.IR zmailer (3zm)
library's
.I mail_open()
et.al. functions use several environment variables.
See that man-page.

.SH Z\-ENV VARIABLES USED BY THE SMTPSERVER
A collection of system configuration things
.PP
.IP ALLOWSOURCEROUTE
Alternate way to tell the system the same thing as config does:
.nf
   PARAM allowsourceroute
.fi
.B "Preferrably this is not to be used!  Security dangers aplenty!"
.PP
.IP BINDADDR
If exists (with valid content),
.B BINDADDR
specifies to which local interface to bind
.IR smtpserver ,
.I smtp
transport agent, and
.IR scheduler .
Possible specification formats are:
.nf
  [0.0.0.0]
  [IPv6.0::0]
  iface:eth0:1
.fi
.PP
.IP INPUTDIRS
See
.IR zmailer (3zm).
.PP
.IP INPUTNOTIFY
See
.IR zmailer (3zm).
.PP
.IP MAILBIN
Used to find related
.IR router (8zm)
program for interactive routing things.
.PP
.IP PATH
Passed on authentication subprocess program, see:
.I "PARAM SMTP\-auth\-pipe ..."
.PP
.IP POSTOFFICE
See also
.IR zmailer (3zm).
.PP
.IP ROUTEDIRHASH
See
.IR zmailer (3zm).
.PP
.IP ROUTERNOTIFY
See
.IR zmailer (3zm).
.PP
.IP SYSLOGFLG
.PP
.IP ZCONFIG
Passed on authentication subprocess program, see:
.I "PARAM SMTP\-auth\-pipe ..."
.PP
.SH FILES
.IP \fI@ZMAILERCFGFILE@\fR
system global parameters
.IP \fI@POSTOFFICE@/.pid.smtpserver\fR
$POSTOFFICE/.pid.smtpserver
.IP \fI@MAILSHARE@/smtpserver.conf\fR
$MAILSHARE/smtpserver.conf
.IP \fI/etc/pam.d/smtpauth-login\fR
if PAM mechanism is present and plain-password authentication is wanted
.PP

.SH SEE ALSO
.IR router (8zm),
.IR zmailer.conf (5zm).
.PP
.TS
l l
l l
l s
l s
l s
l l.
RFC 821/2821	 The basic SMTP specification
RFC 1123	 Various 821 parameter clarifications

Several extended SMTP facilities are implemented:

RFC 1341/1521/2045	 MIME specification (body, formats)
RFC 1342/1522/2047	 MIME specification (headers)
RFC 1425/1651/1869	 ESMTP EHLO framework
RFC 1426/1652	 ESMTP 8BITMIME
RFC 1427/1653/1870	 ESMTP SIZE
RFC 1428	 Basic MIME conversion rules
RFC 1830/3030	 ESMTP CHUNKING
RFC 1854/2197/2920	 ESMTP PIPELINING
RFC 1891/3461	 ESMTP DSN
RFC 1893/3463	 Enhanced Mail System Status Codes
RFC 1985	 ESMTP ETRN
RFC 2033	 LMTP server mode (for testing)
RFC 2034	 ESMTP ENHANCEDSTATUSCODES
.\" RFC 2476	 SUBMIT protocol (port 587)
RFC 2487/3207	 ESMTP STARTTLS
RFC 2222	 SASL mechanism base definition
RFC 2554+M$ Exchange	 ESMTP AUTH LOGIN
RFC 2554+NetScape	 ESMTP AUTH=LOGIN
RFC 2852	 ESMTP DELIVERBY (incomplete implementation)
.TE
.SH AUTHOR
This program authored and copyright by:
.RS 3em
Rayan Zachariassen <no address>
.RE
Extended SMTP, policy facilities, etc. by
.RS 3em
Matti Aarnio  <mea@nic.funet.fi>
.RE
