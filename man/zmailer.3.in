.\" $Header$
.ds ]W ZMailer 2.99
.TH ZMAILER 3 "5 Nov 1996"
.SH NAME
mail_open, mail_priority, mail_abort, mail_close, mail_close_alternate, mail_alloc, mail_free, mail_host
\- zmailer message submission interface
.SH SYNOPSIS
\fB
.nf
#include <stdio.h>
#include <zmailer.h>

FILE *mail_open(char *)

int mail_priority;

int mail_abort(FILE *)

int mail_close(FILE *)

int mail_close_alternate(FILE *mfp, char *where, char *suffix)

char *mail_alloc(unsigned int)

int mail_free(char *)

char *mail_host()
.fi
\fR
.PP
The main program against which this library is liked is expected to
export
.nf
   char *progname;
.fi
variable which carries a copy of
.I argv[0]
or something else that programmer wants to set.
.PP
Linkage time:
.B -lzmailer
.SH DESCRIPTION
These routines may be used by any program wishing to submit mail.
.I mail_open
will return a \fBFILE *\fR to a message file that should be written
to by the application.  This message file contains three parts:
the message envelope, the message header, and the message body.
The exact format of these components depend on the message protocol,
which must be specified as the parameter to
.IR mail_open .
The choices are predetermined by the capabilities of
the mailer, and are defined in the header file.  The known possibilities
are:
.IP MSG_RFC822
this is the only format supported by default by the mailer.  The message
headers and body in this format are defined by the DARPA Request For
Comments 822 and 1123.  The message envelope syntax is similar to the
message header syntax, but for complete details refer to the ZMailer
documentation.
.IP MSG_FAX
intended for fax transmissions.
.IP MSG_UUCP
intended for old style UUCP format message headers
.IP MSG_X400
intended for X.400(88) messages.
.PP
The
.IR mail_open ()
routine will look for
.B FULLNAME
and
.B PRETTYLOGIN
environment variables and translate them into message envelope data
for use by the mailer if it generates a sender address header for the message.
.PP
Note that the return value from the
.IR mail_open ()
routine corresponds to the return value of an
.IR fopen (3),
and similarly the return values from
.IR mail_abort ()
and
.IR mail_close ()
correspond to the return value of
.IR fclose (3).
.PP
The
.I mail_priority
variable has default value of 0, and is used on scanning Zmailer
configuration variable
.BR ROUTERDIRS ,
which tells alternate router directories under the
.B POSTOFFICE
directory.
At value 0,
.B ROUTERDIRS
variable is not used.
At higher values, successive directory from "ROUTERDIRS" is taken.
See below about Z-Environment.
.PP
The
.IR mail_close_alternate ()
can be used to send currently open message file to some alternate
destination, and is used at
.IR smtpserver (8)
to send some quick-action requests directly to the
.IR scheduler (8).
.PP
The
.IR mail_alloc ()
and
.IR mail_free ()
routines are used to provide memory space for internal data structures.
The versions of these routines in the library simply call
.IR malloc (3)
and
.IR free (3)
but an application may override them if desired.
.PP
Similarly the
.IR mail_host ()
routine is intended to return a unique string for each host, by default the
hostname, and this too is intended to be overridden by an application that
may already have this information available in some form.

.SH ENVELOPE HEADER LINES
The message envelope headers are used to carry meta-information about
the message.  The goal is to carry transport-envelope information
separate from message (RFC-822) headers, and body.
.ta 1i 1.5i 2.0i 2.5i
.nf
At first the message starts with a set of envelope headers (*-prefix denotes optional):
	*external \\n
	*rcvdfrom %s@%s (%s) \\n
	*bodytype %s \\n
	*with %s \\n
	*identinfo %s \\n
	Either:
	  from <%s> \\n
	Or:
	  channel error \\n
	*envid %s \\n
	*notaryret %s \\n
Then for each recipient pairs of:
	*todsn [NOTIFY=...] [ORCPT=...] \\n
	to <%s> \\n
Just before the data starts, a magic entry:
	env-end \\n
Then starts the message RFC-822 headers, and below it, the body
.fi
.SH EXAMPLE
.ta 1i 1.5i 2.0i
.nf
	\&\fI... set up signal handlers ...\fR
	\fBFILE\fR *mfp = mail_open(\fBMSG_RFC822\fR,0);
	\fBif\fR (mfp != \fBNULL\fR) {
		\&\fI... output the mail message to mfp ...\fR
	} \fBelse\fR
		\&\fI... error handling for not being able to open the file ...\fR
	\fBif\fR (some application processing went wrong
			\fB||\fR we took an interrupt)
		(\fBvoid\fR) mail_abort(mfp);
	\fBelse if\fR (mail_close(mfp) == \fBEOF\fR)
		\&\fI... error handling if something went wrong ...\fR
.fi
.SH ENVIRONMENT VARIABLES
.IP FULLNAME
variable defines textual fullname, for example: "Sample User"
.IP PRETTYLOGIN
variable defines \fBuser@node\fR format of what user wants to claim as his/her
own address (it must match those of mail router accepts.)
.SH Z-ENVIRONMENT VARIABLES
.IP POSTOFFICE
defines directory where all POSTOFFICE functions are under.
.br
Example:
.B POSTOFFICE=/var/spool/postoffice
.IP ROUTERDIRS
defines a `:' separated list of alternate router directories.
If these are defined at all, they \fBmust\fR exist, if alternate
queueing priority mechanism is desired to be used.
.br
Example:
.B ROUTERDIRS=router1:router2:router3:router4
.IP ROUTERDIRHASH
Value ``1'' at this variable means that all router directories
.B must
have subdirectories with names ``A'' thru ``Z'', alike 
.SH FILES
.I /var/spool/postoffice/public (POSTOFFICE/public)
.br
.I /var/spool/postoffice/router (POSTOFFICE/router)
.br
.I /var/spool/postoffice/{ROUTERDIRS} (POSTOFFICE/{ROUTERDIRS})
.SH SEE ALSO
zmailer(1), sendmail(8)
.br
RFC822
.SH AUTHOR
This program authored and copyright by:
.br
Rayan Zachariassen <rayan@cs.toronto.edu>
.br
.B ROUTERDIRS
mechanism is by Matti Aarnio <mea@nic.funet.fi>
