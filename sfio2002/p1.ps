%!PS-Adobe-3.0
%%Creator: groff version 1.17.2
%%CreationDate: Tue Jul  2 11:40:33 2002
%%DocumentNeededResources: font Times-Roman
%%+ font Times-Bold
%%+ font Times-Italic
%%DocumentSuppliedResources: procset grops 1.17 2
%%Pages: 4
%%PageOrder: Ascend
%%Orientation: Portrait
%%EndComments
%%BeginProlog
%%BeginResource: procset grops 1.17 2
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/MANUAL{
statusdict begin/manualfeed true store end
}bind def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}bind def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/FL{
currentgray exch setgray fill setgray
}bind def
/BL/fill load def
/LW/setlinewidth load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
}bind def
/PEND{
clear
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
%%EndResource
%%IncludeResource: font Times-Roman
%%IncludeResource: font Times-Bold
%%IncludeResource: font Times-Italic
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72
def/PL 792 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron/Zcaron
/scaron/zcaron/Ydieresis/trademark/quotesingle/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/space/exclam/quotedbl/numbersign/dollar/percent
/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma/hyphen
/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y
/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase/guillemotleft
/guillemotright/bullet/florin/fraction/perthousand/dagger/daggerdbl
/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen
/brokenbar/section/dieresis/copyright/ordfeminine/guilsinglleft
/logicalnot/minus/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE
/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash
/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/Times-Italic@0 ENC0/Times-Italic RE/Times-Bold@0 ENC0/Times-Bold RE
/Times-Roman@0 ENC0/Times-Roman RE
%%EndProlog
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 314.42(LIBVTHREAD\(3\) LIBVTHREAD\(3\))72 48 R
/F1 10.95/Times-Bold@0 SF -.219(NA)72 84 S(ME).219 E/F2 10/Times-Bold@0
SF(Vthr)108 96 Q(ead)-.18 E F0 2.5<ad70>2.5 G(ortable threads)-2.5 E F1
(SYNOPSIS)72 112.8 Q F0(#include <vthread.h>)108 124.8 Q F2
(VTHREAD TYPES)87 141.6 Q F0 -1.29(Vo)108 153.6 S(id_t*;)1.29 E
(Vthread_t;)108 165.6 Q(Vtmute)108 177.6 Q(x_t;)-.15 E(Vtonce_t;)108
189.6 Q F2(THREAD MAN)87 206.4 Q -.55(AG)-.2 G(EMENT).55 E F0 2.5
(Vthread_t* vtopen\(Vthread_t*)108 218.4 R(vt, int \215ags\);)2.5 E 20
(int vtclose\(Vthread_t*)108 230.4 R(vt\);)2.5 E 20
(int vtset\(Vthread_t*)108 242.4 R(vt, int type, V)2.5 E(oid_t* v)-1.29
E(al\);)-.25 E 2.5(Vthread_t* vtself\(\);)108 254.4 R 20
(int vtrun\(Vthread_t*)108 266.4 R(vt, V)2.5 E(oid_t*\(*startf\)\(V)
-1.29 E(oid_t*\), V)-1.29 E(oid_t* ar)-1.29 E(g\);)-.18 E 20(int vtw)108
278.4 R(ait\(Vthread_t* vt\);)-.1 E 20(int vtkill\(Vthread_t*)108 290.4
R(vt\);)2.5 E F2(MUTEX MAN)87 307.2 Q -.55(AG)-.2 G(EMENT).55 E F0
(Vtmute)108 319.2 Q 2.5(x_t* vtmtxopen\(Vtmute)-.15 F
(x_t* mtx, int \215ags\);)-.15 E 20(int vtmtxclose\(Vtmute)108 331.2 R
(x_t* mtx\);)-.15 E 20(int vtmtxlock\(Vtmute)108 343.2 R(x_t* mtx\);)
-.15 E 20(int vtmtxtrylock\(Vtmute)108 355.2 R(x_t* mtx\);)-.15 E 20
(int vtmtxunlock\(Vtmute)108 367.2 R(x_t* mtx\);)-.15 E 20
(int vtmtxclrlock\(Vtmute)108 379.2 R(x_t* mtx\);)-.15 E F2
(EXECUTING EXA)87 396 Q(CTL)-.55 E 2.5(YO)-.92 G(NCE)-2.5 E F0 10
(#de\214ne VT)108 408 R(ONCE_INITD)-.18 E -1.21 -1.11(AT A)-.4 H 20
(int vtonce\(Vtonce_t*)108 420 R(once, v)2.5 E(oid\(*func\)\(\) \);)-.2
E F2(GETTING ST)87 436.8 Q -.95(AT)-.9 G(US).95 E F0 20
(int vtstatus\(Vthread_t*)108 448.8 R(vt\);)2.5 E 20
(int vterror\(Vthread_t*)108 460.8 R(vt\);)2.5 E 20(int vtmtx)108 472.8
R(error\(Vtmute)-.15 E(x_t* mtx\);)-.15 E 20(int vtonceerror\(Vtonce_t*)
108 484.8 R(once\);)2.5 E F1(DESCRIPTION)72 501.6 Q/F3 10/Times-Italic@0
SF(Vthr)108 513.6 Q(ead)-.37 E F0(pro)4 E 1.499(vides a portable set of\
 functions to create and manage threads within a single process. The)
-.15 F 1.272(restriction to a single process allo)108 525.6 R 1.272
(ws portable and ef)-.25 F 1.272(\214cient implementations of mute)-.25
F -.15(xe)-.15 G 3.772(so).15 G 3.772(nt)-3.772 G 1.272(op of nati)
-3.772 F -.15(ve)-.25 G(primiti)108 537.6 Q -.15(ve)-.25 G 2.81(sa).15 G
-.25(va)-3.01 G .31(ilable on dif).25 F .31(ferent platforms.)-.25 F
.309(The mute)5.31 F 2.809(xi)-.15 G(nterf)-2.809 E .309(ace is k)-.1 F
.309(ept simple by restricting mute)-.1 F -.15(xe)-.15 G 2.809(st).15 G
2.809(ob)-2.809 G(e)-2.809 E(of the recursi)108 549.6 Q .3 -.15(ve o)
-.25 H 2.5(rc).15 G(ounting type.)-2.5 E F2(VTHREAD TYPES)87 583.2 Q -1
(Vo)92 595.2 S(id_t*)1 E F0 .883
(This type is used to pass objects with unkno)108 607.2 R .884
(wn type between dif)-.25 F .884(ferent code v)-.25 F(ariety)-.25 E
5.884(.V)-.65 G .884(oid_t is de\214ned as)-7.174 F -.2(vo)108 619.2 S
(id for ANSI-C and C++ and char for other compilation en).2 E
(vironments.)-.4 E F2(Vthr)92 640.8 Q(ead_t)-.18 E F0
(This is the type of a thread handle.)108 652.8 Q F2(Vtmutex_t)92 674.4
Q F0(This is the type of a mute)108 686.4 Q(x.)-.15 E(1)535 768 Q EP
%%Page: 2 2
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 314.42(LIBVTHREAD\(3\) LIBVTHREAD\(3\))72 48 R
/F1 10/Times-Bold@0 SF(Vtonce_t)92 84 Q F0 .316
(This is the type of a structure used to e)108 96 R -.15(xe)-.15 G .316
(cute certain actions e).15 F .316(xactly once per process no matter ho)
-.15 F 2.815(wm)-.25 G(an)-2.815 E(y)-.15 E
(attempts to do so are made from dif)108 108 Q(ferent threads.)-.25 E F1
(THREAD MAN)87 141.6 Q -.55(AG)-.2 G(EMENT).55 E(Vthr)92 153.6 Q
(ead_t* vtopen\(Vthr)-.18 E(ead_t* vt, int \215ags\))-.18 E F0 .504
(This function creates a ne)108 165.6 R 3.004(wt)-.25 G .505
(hread handle or rene)-3.004 F .505(ws an e)-.25 F .505(xisting one.)
-.15 F .505(It returns the resulting thread handle)5.505 F
(or NULL on error)108 177.6 Q(.)-.55 E 22.94(vt: If)108 194.4 R .413
(vt is NULL, a ne)2.913 F 2.913(wt)-.25 G .413(hread handle is created.)
-2.913 F .413(In this case, the bits VT_INIT and VT_FREE will)5.413 F
.419(be added to \215ags \(belo)144 206.4 R 2.919(w\). If)-.25 F .419
(vt is not NULL, vt is an e)2.919 F .419(xisting thread to be rene)-.15
F 2.919(wed. In)-.25 F .419(this case,)2.919 F
(if the thread is running, it will be w)144 218.4 Q(aited until e)-.1 E
-.15(xe)-.15 G(cution \214nishes before rene).15 E(wing.)-.25 E 11.83
(\215ags: The)108 235.2 R .174
(bit VT_INIT indicates that the handle should be initialized.)2.675 F
.174(Otherwise, the handle is assumed)5.174 F .045(to ha)144 247.2 R
.345 -.15(ve b)-.2 H .045(een initialized already).15 F 5.045(.T)-.65 G
.045(he bit VT_FREE indicates that the space occupied by the handle)
-5.045 F -.1(wa)144 259.2 S 2.5(so).1 G
(btained via malloc\(\) and can be freed when the handle is closed.)-2.5
E F1(int vtclose\(Vthr)92 280.8 Q(ead_t* vt\))-.18 E F0 .352(This funct\
ion closes the handle vt and also frees it if appropriate \(see vtopen\
\(\)\).)108 292.8 R .351(If currently running, clos-)5.351 F
(ing is done only after e)108 304.8 Q -.15(xe)-.15 G(cution \214nishes.)
.15 E(This function returns 0 on success and -1 on error)5 E(.)-.55 E F1
(int vtset\(Vthr)92 326.4 Q(ead_t* vt, int type, V)-.18 E(oid_t* v)-1 E
(al\);)-.1 E F0(This function sets certain attrib)108 338.4 Q
(utes of the thread vt.)-.2 E(It returns 0 on success and -1 on error)5
E(.)-.55 E 13.5(type: This)108 355.2 R .057(currently can be only VT_ST)
2.557 F -.4(AC)-.93 G 2.558(Kt).4 G 2.558(os)-2.558 G .058(et the e)
-2.558 F -.15(xe)-.15 G .058
(cution stack size for the thread vt. In the case,).15 F
(the stack size is \(size_t\)v)144 367.2 Q(al.)-.25 E F1(Vthr)92 388.8 Q
(ead_t* vtself\(\);)-.18 E F0
(This function returns the handle of the calling thread.)108 400.8 Q F1
(int vtrun\(Vthr)92 422.4 Q(ead_t* vt, V)-.18 E(oid_t*\(*startf\)\(V)-1
E(oid_t*\), V)-1 E(oid_t* ar)-1 E(g\);)-.1 E F0
(This function starts the thread running with the call \(*startf\)\(ar)
108 434.4 Q 2.5(g\). It)-.18 F(returns 0 on success and -1 on error)2.5
E(.)-.55 E F1(int vtwait\(Vthr)92 456 Q(ead_t* vt\))-.18 E F0 .145
(This function w)108 468 R .144(aits for the termination of the e)-.1 F
-.15(xe)-.15 G .144(cution of the thread vt if currently running.).15 F
.144(It returns 0 on)5.144 F(success and -1 on error)108 480 Q(.)-.55 E
F1(int vtkill\(Vthr)92 501.6 Q(ead_t* vt\))-.18 E F0 .52
(This function cancels the e)108 513.6 R -.15(xe)-.15 G .52
(cution of the thread vt if currently running.).15 F .52
(It returns 0 on success and -1 on)5.52 F(error)108 525.6 Q(.)-.55 E F1
(MUTEX MAN)87 559.2 Q -.55(AG)-.2 G(EMENT).55 E F0(Mute)108 571.2 Q -.15
(xe)-.15 G 4.177(sa).15 G 1.677(re recursi)-4.177 F -.15(ve)-.25 G 4.177
(.T).15 G 1.676(hat is, each mute)-4.177 F 4.176(xm)-.15 G 1.676
(aintains a lock count.)-4.176 F 4.176(At)6.676 G 1.676
(hread that successfully locks a)-4.176 F(mute)108 583.2 Q 3.285(xc)-.15
G .785(an relock it as often as needed.)-3.285 F .786
(Each successful locking attempt increases the lock count by one.)5.785
F .391(Only the thread that o)108 595.2 R .391(wns the lock on a mute)
-.25 F 2.891(xc)-.15 G .39(an unlock it.)-2.891 F .39
(Each successful unlocking attempt decreases)5.39 F
(the lock count by one.)108 607.2 Q F1
(Vtmutex_t* vtmtxopen\(Vtmutex_t* mtx, int \215ags\);)92 640.8 Q F0
1.461(This function creates a ne)108 652.8 R 3.962(wm)-.25 G(ute)-3.962
E 3.962(xo)-.15 G 3.962(rr)-3.962 G(ene)-3.962 E 1.462(ws an e)-.25 F
1.462(xisting mute)-.15 F 3.962(xs)-.15 G 3.962(tructure. In)-3.962 F
1.462(the latter case, the mute)3.962 F(x)-.15 E .843
(structure should not be currently lock)108 664.8 R .843
(ed or some unde\214ned beha)-.1 F .843(vior will result.)-.2 F .842
(The function returns the)5.842 F(resulting mute)108 676.8 Q 2.5(xo)-.15
G 2.5(rN)-2.5 G(ULL on error)-2.5 E(.)-.55 E 15.16(mtx: If)108 693.6 R
.945(mtx is NULL, a ne)3.445 F 3.445(wm)-.25 G(ute)-3.445 E 3.445(xi)
-.15 G 3.445(sc)-3.445 G 3.445(reated. In)-3.445 F .945
(this case, the bits VT_INIT and VT_FREE will be)3.445 F
(added to \215ags \(belo)144 705.6 Q 2.5(w\). If)-.25 F
(mtx is not NULL, mtx is an e)2.5 E(xisting mute)-.15 E 2.5(xt)-.15 G
2.5(ob)-2.5 G 2.5(er)-2.5 G(ene)-2.5 E(wed.)-.25 E(2)535 768 Q EP
%%Page: 3 3
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 314.42(LIBVTHREAD\(3\) LIBVTHREAD\(3\))72 48 R
11.83(\215ags: The)108 84 R .433(bit VT_INIT indicates that the mute)
2.933 F 2.933(xs)-.15 G .433(hould be initialized.)-2.933 F .433
(Otherwise, the mute)5.433 F 2.932(xi)-.15 G 2.932(sa)-2.932 G(ssumed)
-2.932 E .166(to ha)144 96 R .466 -.15(ve b)-.2 H .166
(een initialized already).15 F 5.166(.T)-.65 G .166
(he bit VT_FREE indicates that the space occupied by the mute)-5.166 F
(x)-.15 E -.1(wa)144 108 S 2.5(so).1 G
(btained via malloc\(\) and can be freed when the mute)-2.5 E 2.5(xi)
-.15 G 2.5(sc)-2.5 G(losed.)-2.5 E/F1 10/Times-Bold@0 SF
(int vtmtxclose\(Vtmutex_t* mtx\);)92 129.6 Q F0 .225
(This function clears the lock count of the mute)108 141.6 R 2.724(xm)
-.15 G .224(tx, then closes it.)-2.724 F .224
(It returns 0 on success and -1 on error)5.224 F(.)-.55 E F1
(int vtmtxlock\(Vtmutex_t* mtx\);)92 163.2 Q F0 .5
(This function attempts to lock the mute)108 175.2 R 3(xm)-.15 G 3
(tx. If)-3 F .5(the lock is currently clear)3 F 3(,t)-.4 G .5
(he current thread becomes its)-3 F -.25(ow)108 187.2 S(ner).25 E 6.094
(.T)-.55 G 1.094(hen, only this thread can relock the mute)-6.094 F
3.594(xa)-.15 G 3.594(sm)-3.594 G(an)-3.594 E 3.594(yt)-.15 G 1.094
(imes as desired.)-3.594 F(An)6.094 E 3.594(ya)-.15 G 1.093
(ttempt to lock mtx)-3.594 F(from a dif)108 199.2 Q
(ferent thread will block.)-.25 E
(This function returns 0 on success and -1 on error)5 E(.)-.55 E F1
(int vtmtxtrylock\(Vtmutex_t* mtx\);)92 220.8 Q F0
(This function attempts to lock the mute)108 232.8 Q 2.5(xm)-.15 G
(tx without blocking.)-2.5 E(It returns 0 on success and -1 on error)5 E
(.)-.55 E F1(int vtmtxunlock\(Vtmutex_t* mtx\);)92 254.4 Q F0 .753
(This function attempts to decrease the lock count on the mute)108 266.4
R 3.253(xm)-.15 G .753(tx by one.)-3.253 F .753(Only the thread o)5.753
F .753(wning mtx)-.25 F(can unlock it.)108 278.4 Q(An)5 E 2.5(yo)-.15 G
(ther attempt will result in f)-2.5 E 2.5(ailure. The)-.1 F
(function returns 0 on success and -1 on error)2.5 E(.)-.55 E F1
(int vtmtxclrlock\(Vtmutex_t* mtx\);)92 300 Q F0 .999
(This function attempts to clear the lock on the mute)108 312 R 3.499
(xm)-.15 G .998(tx, i.e., to reset the lock count to zero.)-3.499 F .998
(Only the)5.998 F .389(thread o)108 324 R .389(wning mtx can clear it.)
-.25 F(An)5.389 E 2.889(yo)-.15 G .389(ther attempt will result in f)
-2.889 F 2.89(ailure. The)-.1 F .39(function returns 0 on success)2.89 F
(and -1 on error)108 336 Q(.)-.55 E F1(EXECUTING EXA)87 369.6 Q(CTL)-.55
E 2.5(YO)-.92 G(NCE)-2.5 E(VT)92 381.6 Q(ONCE_INITD)-.18 E -1.5 -.95
(AT A)-.35 H F0
(This macro is used to initialize a Vtonce_t structure in the follo)108
393.6 Q(wing manner:)-.25 E(Vtonce_t once = VT)118 405.6 Q(ONCE_INITD)
-.18 E -1.21 -1.11(AT A)-.4 H(;)1.11 E F1(int vtonce\(Vtonce_t* once, v)
92 427.2 Q(oid\(*func\)\(\) \);)-.1 E F0 .363
(This function ensures that the call \(*func\)\(\) is made e)108 439.2 R
.362(xactly once per process and once structure re)-.15 F -.05(ga)-.15 G
(rdless).05 E .027(of ho)108 451.2 R 2.527(wm)-.25 G(an)-2.527 E 2.528
(ya)-.15 G .028(ttempts are made.)-2.528 F .028
(It is useful for initialization of shared data across threads.)5.028 F
.028(It returns 0P on)5.028 F(success and -1 on error)108 463.2 Q(.)-.55
E F1(GETTING ST)87 496.8 Q -.95(AT)-.9 G(US).95 E -1(Vo)92 508.8 S
(id_t* vtstatus\(Vthr)1 E(ead_t* vt\);)-.18 E F0
(This function returns the e)108 520.8 Q(xit status of vt after e)-.15 E
-.15(xe)-.15 G(cution \214nishes.).15 E F1(int vterr)92 542.4 Q
(or\(Vthr)-.18 E(ead_t* vt\);)-.18 E F0
(This function returns the error status of vt after a f)108 554.4 Q
(ailed operation.)-.1 E F1(int vtmtxerr)92 576 Q(or\(Vtmutex_t* mtx\);)
-.18 E F0(This function returns the error status of mtx after a f)108
588 Q(ailed operation.)-.1 E F1(int vtonceerr)92 609.6 Q
(or\(Vtonce_t* once\);)-.18 E F0
(This function returns the error status of once after a f)108 621.6 Q
(ailed operation.)-.1 E/F2 10.95/Times-Bold@0 SF(IMPLEMENT)72 655.2 Q
-1.04(AT)-.986 G(ION NO)1.04 E(TES)-.438 E F0 1.932
(The current Vthread implementation is suf)108 667.2 R 1.931
(\214cient for use in writing thread-safe libraries \(e.g., the S\214o)
-.25 F .361(library\). It still lacks useful f)108 679.2 R .361
(acilities such as condition v)-.1 F .361(ariables, pri)-.25 F -.25(va)
-.25 G .361(te thread data, etc.).25 F .362(Some future v)5.362 F(er)
-.15 E(-)-.2 E(sions will support these.)108 691.2 Q .079
(The library has been ported to popular Unix v)108 708 R .079
(ersions including v)-.15 F .078(arious \215a)-.25 F -.2(vo)-.2 G .078
(rs of BSD, LINUX, SOLARIS,).2 F .408(IRIX, HPUX and Da)108 720 R .709
-.15(ve K)-.2 H(orn')-.2 E 2.909(sU)-.55 G 2.909(WIN. F)-2.909 F .409
(or HPUX, it has only been tested on v)-.15 F .409
(ersion B.11.00. Threads on)-.15 F(3)535 768 Q EP
%%Page: 4 4
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 314.42(LIBVTHREAD\(3\) LIBVTHREAD\(3\))72 48 R
(older v)108 84 Q(ersions of HPUX do not compile/w)-.15 E
(ork properly to be usable under Vthread.)-.1 E/F1 10.95/Times-Bold@0 SF
-.548(AU)72 117.6 S(THOR).548 E F0(Kiem-Phong V)108 129.6 Q
(o, kpv@research.att.com)-1.29 E(4)535 768 Q EP
%%Trailer
end
%%EOF
